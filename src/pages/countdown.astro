---
import Layout from "../layouts/Layout.astro";

---

<Layout title="Countdown | [cleantimer]">
    <main id="container">
        <h1 id="time" class="time"></h1>
        <div id="error" class="error"></div>
    </main>
</Layout>

<script>
    import * as chrono from 'chrono-node';

    const timeElement = document.getElementById('time')!;
    const errorElement = document.getElementById('error')!;
    const containerElement = document.getElementById('container')!;

    function parseTime(time: string | null): number {
        if (!time) return Date.now();

        let results = chrono.parse(time);
        if (results.length === 0) {
            results = chrono.parse('in ' + time);
        }
        return results[0]?.date().getTime() || NaN;
    }

    const urlParams = new URLSearchParams(window.location.search)
    const to = parseTime(urlParams.get('t'))
    if (!Number.isFinite(to)) {
        const errorMessage = `Invalid time: '${urlParams.get('t')}'`;
        errorElement.textContent = errorMessage;
        throw errorMessage;
    }

    let showNegative = true;

    function formatTime(totalSeconds: number) {
        if (!showNegative && totalSeconds < 0) {
            totalSeconds = 0;
        }
        const normalizedSeconds = Math.abs(totalSeconds);
        const hours = Math.floor(normalizedSeconds / 3600)
        const minutes = Math.floor((normalizedSeconds % 3600) / 60)
        const seconds = normalizedSeconds % 60
        return `${totalSeconds < 0 ? '-' : ''}${hours}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`
    }

    let secondsLeft = 0;
    let alarmActive = false;

    function updateTime() {
        const desiredSecondsLeft = Math.ceil((to - Date.now()) / 1000);
        if (secondsLeft === desiredSecondsLeft) return;
        secondsLeft = desiredSecondsLeft;

        const timeStr = formatTime(secondsLeft);
        timeElement.textContent = timeStr;
        document.title = timeStr + ' | [cleantimer]'

        const desiredAlarmActive = secondsLeft <= 0;
        if (alarmActive == desiredAlarmActive) return;
        alarmActive = desiredAlarmActive;

        if (alarmActive) {
            containerElement.classList.add('alarm')
        } else {
            containerElement.classList.remove('alarm')
        }
        // TODO: Play audio
    }

    setInterval(updateTime, 500);
</script>

<style>
    @import url('https://fonts.googleapis.com/css2?family=Roboto+Mono&display=swap');

    .time {
        font-size: min(12rem, 25vw);
        font-family: 'Roboto Mono', monospace;
        text-align: center;
    }

    .error {
        font-size: 3rem;
        font-family: Arial, Helvetica, sans-serif;
        text-align: center;
    }

    .alarm .time {
        color: red;
    }

    @keyframes flash {
        0% {
            opacity: 100%;
        }
        50% {
            opacity: 5%;
        }
        100% {
            opacity: 100%;
        }
    }
</style>